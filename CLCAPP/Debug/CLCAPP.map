Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./ADC_prog.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./TSW_prog.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                              ./main.o (itoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

old_ADC             0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./ADC_prog.o
LOAD ./CLCD_prog.o
LOAD ./DIO-prog.o
LOAD ./TSW_prog.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x13e2
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./ADC_prog.o
 .text          0x00000092        0x0 ./CLCD_prog.o
 .text          0x00000092        0x0 ./DIO-prog.o
 .text          0x00000092        0x0 ./TSW_prog.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.ADC_voidInit
                0x00000092       0x36 ./ADC_prog.o
                0x00000092                ADC_voidInit
 .text.ADC_voidEnable
                0x000000c8       0x1c ./ADC_prog.o
                0x000000c8                ADC_voidEnable
 .text.ADC_voidDisable
                0x000000e4       0x1c ./ADC_prog.o
                0x000000e4                ADC_voidDisable
 .text.ADC_u8ReadCh_SSht
                0x00000100       0xd6 ./ADC_prog.o
                0x00000100                ADC_u8ReadCh_SSht
 .text.ADC_u8ReadCh_MSht
                0x000001d6      0x110 ./ADC_prog.o
                0x000001d6                ADC_u8ReadCh_MSht
 .text.ADC_u8ReadGp
                0x000002e6      0x134 ./ADC_prog.o
                0x000002e6                ADC_u8ReadGp
 .text.CLC_voidInit
                0x0000041a       0xc8 ./CLCD_prog.o
                0x0000041a                CLC_voidInit
 .text.CLCD_u8WriteComand
                0x000004e2       0xb8 ./CLCD_prog.o
                0x000004e2                CLCD_u8WriteComand
 .text.CLCD_u8WriteDataChar
                0x0000059a       0xb8 ./CLCD_prog.o
                0x0000059a                CLCD_u8WriteDataChar
 .text.CLCD_u8WriteDataStr
                0x00000652       0xdc ./CLCD_prog.o
                0x00000652                CLCD_u8WriteDataStr
 .text.CLCD_u8ReadBF
                0x0000072e       0x6a ./CLCD_prog.o
                0x0000072e                CLCD_u8ReadBF
 .text.CLCD_u8WriteOnCGRam
                0x00000798       0x80 ./CLCD_prog.o
                0x00000798                CLCD_u8WriteOnCGRam
 .text.DIO_voidInit
                0x00000818       0x7e ./DIO-prog.o
                0x00000818                DIO_voidInit
 .text.DIO_u8ReadPinVal
                0x00000896       0x96 ./DIO-prog.o
                0x00000896                DIO_u8ReadPinVal
 .text.DIO_u8WritePinVal
                0x0000092c       0xfc ./DIO-prog.o
                0x0000092c                DIO_u8WritePinVal
 .text.DIO_u8ReadPortVal
                0x00000a28       0x4e ./DIO-prog.o
                0x00000a28                DIO_u8ReadPortVal
 .text.DIO_u8WritePortVal
                0x00000a76       0x68 ./DIO-prog.o
                0x00000a76                DIO_u8WritePortVal
 .text.DIO_u8WritePinDir
                0x00000ade       0xa8 ./DIO-prog.o
                0x00000ade                DIO_u8WritePinDir
 .text.DIO_u8WritePortDir
                0x00000b86       0x46 ./DIO-prog.o
                0x00000b86                DIO_u8WritePortDir
 .text.DIO_u8ReadPinDir
                0x00000bcc       0x96 ./DIO-prog.o
                0x00000bcc                DIO_u8ReadPinDir
 .text.DIO_u8ReadPortDir
                0x00000c62       0x4e ./DIO-prog.o
                0x00000c62                DIO_u8ReadPortDir
 .text.TSW_voidinit
                0x00000cb0       0x22 ./TSW_prog.o
                0x00000cb0                TSW_voidinit
 .text.TSW_u8ReadState
                0x00000cd2      0x146 ./TSW_prog.o
                0x00000cd2                TSW_u8ReadState
 .text.main     0x00000e18       0x22 ./main.o
                0x00000e18                main
 .text.ADC_conv
                0x00000e3a      0x124 ./main.o
                0x00000e3a                ADC_conv
 .text.step     0x00000f5e      0x104 ./main.o
                0x00000f5e                step
 .text.Write_LCD
                0x00001062       0xf4 ./main.o
                0x00001062                Write_LCD
 .text.Read_sw  0x00001156       0x70 ./main.o
                0x00001156                Read_sw
 .text.write_name
                0x000011c6      0x18e ./main.o
                0x000011c6                write_name
 .text.libgcc   0x00001354        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00001354        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00001354        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00001354       0x42 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x00001354                itoa
 .text.avr-libc
                0x00001396       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x00001396                strrev
 .text.libgcc   0x000013b6       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x000013b6                __udivmodhi4
                0x000013de                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000013de        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000013de                exit
                0x000013de                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000013de        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000013e2                _etext = .

.data           0x00800060       0x62 load address 0x000013e2
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./ADC_prog.o
 .data          0x00800060        0x0 ./CLCD_prog.o
 .data          0x00800060        0x0 ./DIO-prog.o
 .data          0x00800060        0x0 ./TSW_prog.o
 .data          0x00800060       0x1a ./main.o
 .data          0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .data          0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .data          0x0080007a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.data*)
 .data.m        0x0080007a        0x1 ./main.o
                0x0080007a                m
 *(.rodata)
 *(.rodata*)
 .rodata.CHKERR
                0x0080007b        0x2 ./ADC_prog.o
 .rodata.CLC_u8DataArr
                0x0080007d        0x8 ./CLCD_prog.o
                0x0080007d                CLC_u8DataArr
 .rodata.CHKerr
                0x00800085        0x2 ./CLCD_prog.o
                0x00800085                CHKerr
 .rodata.DIO_u8Ports
                0x00800087        0x8 ./DIO-prog.o
 .rodata.DIO_u8Ddrs
                0x0080008f        0x8 ./DIO-prog.o
 .rodata.DIO_u8Pins
                0x00800097        0x8 ./DIO-prog.o
 .rodata.TSW_SWtchs
                0x0080009f        0x1 ./TSW_prog.o
                0x0080009f                TSW_SWtchs
 .rodata.CheckErr
                0x008000a0        0x2 ./TSW_prog.o
                0x008000a0                CheckErr
 .rodata.C.41.1395
                0x008000a2        0x8 ./main.o
 .rodata.C.40.1394
                0x008000aa        0x8 ./main.o
 .rodata.C.39.1393
                0x008000b2        0x8 ./main.o
 .rodata.C.38.1392
                0x008000ba        0x8 ./main.o
 *(.gnu.linkonce.d*)
                0x008000c2                . = ALIGN (0x2)
                0x008000c2                _edata = .
                0x008000c2                PROVIDE (__data_end, .)

.bss            0x008000c2        0xf
                0x008000c2                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000c2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000c2        0x0 ./ADC_prog.o
 .bss           0x008000c2        0x0 ./CLCD_prog.o
 .bss           0x008000c2        0x0 ./DIO-prog.o
 .bss           0x008000c2        0x0 ./TSW_prog.o
 .bss           0x008000c2        0x0 ./main.o
 .bss           0x008000c2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008000c2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000c2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x008000c2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .bss           0x008000c2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .bss           0x008000c2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 .bss.TSW_ButtonState
                0x008000c2        0x1 ./TSW_prog.o
 .bss.TSW_ButtonVal
                0x008000c3        0x1 ./TSW_prog.o
 .bss.TSW_laststat
                0x008000c4        0x1 ./TSW_prog.o
 .bss.TSW_LowCounter
                0x008000c5        0x1 ./TSW_prog.o
 .bss.TSW_HighCounter
                0x008000c6        0x1 ./TSW_prog.o
 .bss.flg       0x008000c7        0x1 ./main.o
                0x008000c7                flg
 .bss.f         0x008000c8        0x1 ./main.o
                0x008000c8                f
 .bss.ADCREAD   0x008000c9        0x2 ./main.o
                0x008000c9                ADCREAD
 .bss.c         0x008000cb        0x2 ./main.o
                0x008000cb                c
 .bss.count     0x008000cd        0x2 ./main.o
                0x008000cd                count
 .bss.flag1     0x008000cf        0x1 ./main.o
                0x008000cf                flag1
 *(COMMON)
 COMMON         0x008000d0        0x1 ./main.o
                0x008000d0                old_ADC
                0x008000d1                PROVIDE (__bss_end, .)
                0x000013e2                __data_load_start = LOADADDR (.data)
                0x00001444                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000d1        0x0
                0x008000d1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000d1                PROVIDE (__noinit_end, .)
                0x008000d1                _end = .
                0x008000d1                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1cd4
 *(.stab)
 .stab          0x00000000      0x4d4 ./ADC_prog.o
 .stab          0x000004d4      0x660 ./CLCD_prog.o
                                0x6cc (size before relaxing)
 .stab          0x00000b34      0x7c8 ./DIO-prog.o
                                0x834 (size before relaxing)
 .stab          0x000012fc      0x324 ./TSW_prog.o
                                0x390 (size before relaxing)
 .stab          0x00001620      0x6b4 ./main.o
                                0x72c (size before relaxing)

.stabstr        0x00000000      0xaf4
 *(.stabstr)
 .stabstr       0x00000000      0xaf4 ./ADC_prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(CLCAPP.elf elf32-avr)
LOAD linker stubs
